배열(Array)
- 변수는 한 개의 데이터만 저장할 수 있기 떄문에 데이터의 수가 많아지면 그만큼 많은 변수가 필요
- 동일한 데이터 타입의 변수를 연속적으로 생성

배열의 선언
    배열 : 데이터타입[] 배열명;
    int[] num;

배열의 메모리 할당
    배열명 = new 데이터타입[요소의 개수];
    num = new int[3];


배열의 초기화
    num[0] = 10;
    num[1] = 20;
    num[2] = 30;

이차원 배열
- 값이 행과 열로 구성된 배열

데이터타입[][] 배열명 = new 데이터타입[행요소의 개수][열요소의 개수];
    예) int[][] arr = new int[2][3];

            열
        행  [0,0]  [0,1]  [0,2]
            [1,0]  [1,1]  [1,2]

배열의 값을 미리 지정하는 방법
    int[] num = new int[5];
    num[0] = 10;
    num[1] = 20;
    num[2] = 30;
    num[3] = 40;
    num[4] = 50;

    int[] num = {10, 20, 30, 40, 50};


    int[][] num = new int[2][3];
    num[0][0] = 10;
    num[0][1] = 20;
    num[0][2] = 30;
    num[1][0] = 40;
    num[1][1] = 50;
    num[1][2] = 60;

    int[][] num = {{10, 20, 30},{40,50,60}};

향상된 for문
    for(변수선언 : 배열){
        배열의 요소만큼 반복할 문장;
        ...
    }

    예)
    args = ["김사과", "반하나", "오렌지"]
    for(String s : args){
        System.out.println(s)
    }

String 클래스
- 자바의 문자열을 저장하고 다룰 수 있는 클래스

    String str = new String("저장할 값");
    예) String str = new String("apple");

    String 변수명 = "값";
    예) String str = "apple";

concat() : 문자열과 문자열을 연결(메소드)
indexOf : 원하는 문자(열)을 찾아 해당하는 문자의 index를 리턴
trim() : 문자열의 앞, 뒤 공백을 제거
toLowerCase(), toUpperCase() : 문자를 소문자, 대문자로 변환
length() : 문자열의 길이를 반환
substring() : 원하는 문자열을 추출
Integer.parseInt() : 문자열을 숫자로 변환


문제.
문자열로 숫자를 입력받아 각 자리수를 곱하는 프로그램을 작성해보자.
    숫자를 입력하세요. 354
    결과
    60

main 메소드
- 자바 어플리케이션이 실행될 때 가장 먼저 실행되며 프로그램이 구동되는 메소드
- String[] args는 매개변수로 동작


과제.
1. 로또번호 예측 프로그램을 만들어보자.
- 오름차순
- 중복된 숫자 제거

2. 주민등록번호를 입력받아 주민등록번호가 유효성 검사 프로그램을 만들어보자.
    주민등록번호  : 0 0 1 0 1 1  3 0 6 8 5 1 8

    - 각 자리에 2 3 4 5 6 7 8 9 2 3 4 5 를 곱하고 모두 더함
    (단, 주민등록번호의 마지막 자리는 제외)

        0 0 1 0 1 1 3 0 6 8 5 1    -> 8
        * * * * * * * * * * * *
        2 3 4 5 6 7 8 9 2 3 4 5
        0 + 0 + 4 + 0 + 6 + 7 + 24 + 0 + 12 + 24 + 20 + 5 = 102

    - 11로 나눈 나머지 값을 구함

        102 % 11 = 3

    - 11에서 결과값을 뺌
    (단, 결과가 10이상이면 10으로 나눈 나머지 값을 다시 구함)

        11 - 3 = 8
        만약 11 - 1 = 10 -> 10 % 10 -> 0
        만약 11 - 0 = 11 -> 11 % 10 -> 1

    - 마지막 결과가 주민등록번호 마지막 자리와 일치하면유효한 주민등록번호임

주민등록번호를 입력하세요
유효한 주민등록번호입니다.

주민등록번호를 입력하세요
올바르지 않은 주민등록번호입니다.


알고리즘 : 절차나 결과를 내기 위하여 내가 생각하는대로 로직을 짜는 행위(레시피)

