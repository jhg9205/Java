ResultSet 인터페이스
- 결과를 저장할 수 있는 객체
- 저장된 값을 로우 단위로 불러올 수 있음
- 로우 단위로 데이터를 가져올 경우 타입을 지정하여 불러올 수 있음

싱글톤 패턴
- 디자인패턴중 하나로 매번 드라이버로 로드하지 않고 프로세스에서 객체를 단 하나만 만들어 재활용할 수 있도록
공유 자원을 생성하는 방법

✔ 디자인패턴
- 소프트웨어를 설계할때 특정 맥락에서 자주 발생하는 고질적인 문제들이 발생했을 때 재사용할 수 있는 해결책


PreparedStatement 인터페이스
- Statement와 PreparedStatement의 차이는 캐시 사용 유무
- 객체를 캐시에 담아 재사용
- 반복적으로 쿼리를 수행한다면 Statement에 비해 성능이 좋음
- Statement는 보안상 취약점이 발견되었기 때문에 PreparedStatement를 사용하는 것을 권고하고 있음
- 코드가 길어질 수 있음

    statement
    String sql = "insert into tb_member (mem_userid, mem_userpw, mem_name...) values
    ('apple', '1111', '김사과',...)";
    stmt.executeUpdate(sql);

    PreparedStatement
    String sql = "insert into tb_member (mem_userid, mem_userpw, mem_name...) values
    (?, ?, ?,..)";
    pstmt = conn.prepareStatement(sql); // 컴파일
    pstmt.setString(1, mem_userid);
    pstmt.setString(2, mem_userpw);
    pstmt.setString(3, mem_name);
    ...
    pstmt.executeUpdate();


DTO(Data Transfer Object)
- 계층간 데이터 교환하기 위한 자바빈즈를 뜻함
- DTO와 VO(Value Object)를 혼용해서 많이 사용하지만 (VO는 읽기전용)
- 순수한 데이터의 객체
- getter, setter 메소드를 가지고 있음

DAO(Data Access Object)
- 데이터베이스의 데이터에 접근하기 위해 생성하는 객체
- 데이터베이스에 접근하기 위한 로직과 비지니스 로직을 분리하기 위해 사용
- DB에 접속하여 데이터의 CRUD(생성, 읽기, 갱신, 삭제) 작업을 실행하는 클래스
- 코드의 가녁로하 및 모듈화, 유지보수 등의 목적을 위해 별도로 생성하여 사용하는 것을 권장
- DB를 사용하여 데이터의 조회 및 조작하는 기능을 전담하는 오브젝트

문제.
DAO에 edit() 메소드를 작성해보자
    출력
    수정할 단어를 입력하세요 > apple
    단어의 뜻을 입력하세요 > 사과
    레벨을 입력하세요 > 2
    단어 수정 성공! 또는 단어 수정 실패!

과제.
    tb_student 테이블 생성
    학번, 이름, 연락처, 성별, 등록날짜

    studentDTO 클래스와 studentDAO 클래스를 사용하여 아래 기능을 구현하는 프로그램을 만들어보자

******** 메뉴 ********
1. 학생 등록
2. 학생 리스트
3. 학생 수정
4. 학생 삭제
5. 프로그램 종료
*********************

💕 키(key)는 학번으로 사용
