과제.
아래 용어에 대해 조사하고 예제를 만들어보자.

- 상속 : 상속 방법 (class 클래스(자식) extends 클래스(부모))
        상속받는 클래스를 (자식 클래스, 하위 클래스, 서브 클래스)
        상속을 해주는 클래스를 (부모 클래스, 상위 클래스, 슈퍼 클래스)
        자식 클래스는 부모 클래스로부터 메소드와 필드를 물려받아 사용
        자식 클래스가 더 다양한 기능이 가능하므로 자식 클래스로 인스턴스를 생성하는 것이 효율적

        장점 : 중복된 코드를 줄일 수 있고, 유지 보수가 편리하며, 통일성이 있고 다형성을 구현


- 접근 제어자 : 외부로부터 데이터를 보호하기 위해서 사용


- super 키워드 : super 키워드는 부모 클래스로부터 상속받은 필드나 메소드를 자식 클래스에서 참조하는 데 사용하는 참조 변수
               super.메소드명();
               super.필드명;

- this 키워드 :
1) 자기 자신의 메모리를 카리킨다.
this.필드명

2) 생성자에서 다른 생성자를 호출할 경우 사용한다.
-매개 변수가 있는 생성자 2개를 생성한 후 매개 변수가 없는 생성자에 this 키워드를 이용하여 값을 넣을 경우 매개 변수가 있는 생성자를 참조하여
-메인 함수에서 생성자를 호출할 때 해당 값이 자동으로 대입
this(매개변수);

3) 인스턴스 자신의 주소를 반환할 때 사용한다.

- 생성자 :  new 연산자를 통해서 인스턴스를 생성할 때 반드시 호출이 되고 제일 먼저 실행되는 일종의 메소드(하지만 메소드와는 다르다.)이다.
           생성자는 인스턴스 변수(필드 값 등)를 초기화 시키는 역할을 한다.
           기본생성자 : (public) 클래스명(){

                       }
           매개변수를 갖는 생성자 : (public} 클래스명(매개변수){

                                 }


- 오버로딩  : 1개의 클래스에서 동일한 이름의 메소드 또는 생성자를 여러개 정의하는 것
            동일한 이름을 갖고 매개변수의 자료형, 개수, 순서를 다르게 하여 선언해야 한다.
            오버로딩을 하는 이유는 동일한 기능의 메서드를 정의할 때 외부로부터 다양한 입력값(매개값)을 받기 위해서 사용

- 오버라이딩 : 부모 클래스의 메소드를 자식 클래스에서 재정의함
             자식 클래스가 부모 클래스를 상속하여 자식한테 없는 메소드를 호출하면 부모클래스에 가서 해당 메소드를 찾게 된다.
             만약 부모 클래스의 메소드를 자식클래스에서 동일한 이름으로 다시 재정의 하면 부모클래스의 메소드를 찾지 않고 자식 클래스의 메소드를 호출한다.
             부모클래스와 자식클래스의 타입을 따를 수 없지만, 자식클래스와 자식클래스에 나온 객체가 부모클래스의 타입을 따를 수 있다.

가족 구성원들의 정보를 빼오자
